{"ast":null,"code":"var _jsxFileName = \"/Users/glenn/react-task-trackerr/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react'; // contract\n\nimport contract from './contracts/NFTCollectible.json';\nimport './App.css'; // contract address\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0xc5d404183cb9De6a14eccb849f44A862a43c2C05\"; // abi\n\nconst abt = contract.abi;\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    // 1.check if there is metamask\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      alert(\"Please install Meta mask!\");\n    } // 2.chekc if get the account \n\n\n    try {\n      // 3.yes, then setState the account\n      const account = await ethereum.request({\n        method: 'eth_requestAccounts' // params: [{ eth_accounts: {} }]\n\n      }); // https://ethereum.stackexchange.com/questions/75851/metamask-rpc-error-internal-json-rpc-error, simply clean the history and cache\n\n      console.log(\"find the address\" + account[0]);\n      setCurrentAccount(account);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const connectWalletHandler = () => {};\n\n  const mintNftHandler = () => {};\n\n  const connectWalletButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  };\n\n  const mintNftButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintNftHandler,\n      className: \"cta-button mint-nft-button\",\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scrappy Squirrels Tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: connectWalletButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vg9h9hqTAVJVjklrPXRRIAqzLN0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/glenn/react-task-trackerr/src/App.js"],"names":["useEffect","useState","contract","contractAddress","abt","abi","App","currentAccount","setCurrentAccount","checkWalletIsConnected","ethereum","window","alert","account","request","method","console","log","error","connectWalletHandler","mintNftHandler","connectWalletButton","mintNftButton"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,WAAP,C,CACA;;;AACA,MAAMC,eAAe,GAAG,4CAAxB,C,CACA;;AACA,MAAMC,GAAG,GAAGF,QAAQ,CAACG,GAArB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;;AACA,QAAMQ,sBAAsB,GAAG,YAAY;AACzC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAeC,MAArB;;AACA,QAAI,CAACD,QAAL,EAAe;AACbE,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACD,KALwC,CAOzC;;;AACA,QAAI;AAEF;AACA,YAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiB;AACrCC,QAAAA,MAAM,EAAE,qBAD6B,CAErC;;AAFqC,OAAjB,CAAtB,CAHE,CAOF;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAuBJ,OAAO,CAAC,CAAD,CAA1C;AACAL,MAAAA,iBAAiB,CAACK,OAAD,CAAjB;AACD,KAVD,CAUE,OAAOK,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,GArBD;;AAuBA,QAAMC,oBAAoB,GAAG,MAAM,CAAG,CAAtC;;AAEA,QAAMC,cAAc,GAAG,MAAM,CAAG,CAAhC;;AAEA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,wBACE;AAAQ,MAAA,OAAO,EAAEF,oBAAjB;AAAuC,MAAA,SAAS,EAAC,kCAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQA,QAAMG,aAAa,GAAG,MAAM;AAC1B,wBACE;AAAQ,MAAA,OAAO,EAAEF,cAAjB;AAAiC,MAAA,SAAS,EAAC,4BAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQApB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,sBAAsB;AACvB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGY,mBAAmB;AADtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAzDQf,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react'\n// contract\nimport contract from './contracts/NFTCollectible.json'\nimport './App.css'\n// contract address\nconst contractAddress = \"0xc5d404183cb9De6a14eccb849f44A862a43c2C05\"\n// abi\nconst abt = contract.abi\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const checkWalletIsConnected = async () => {\n    // 1.check if there is metamask\n    const { ethereum } = window;\n    if (!ethereum) {\n      alert(\"Please install Meta mask!\")\n    }\n\n    // 2.chekc if get the account \n    try {\n\n      // 3.yes, then setState the account\n      const account = await ethereum.request({\n        method: 'eth_requestAccounts',\n        // params: [{ eth_accounts: {} }]\n      })\n      // https://ethereum.stackexchange.com/questions/75851/metamask-rpc-error-internal-json-rpc-error, simply clean the history and cache\n      console.log(\"find the address\" +   account[0])\n      setCurrentAccount(account)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const connectWalletHandler = () => { }\n\n  const mintNftHandler = () => { }\n\n  const connectWalletButton = () => {\n    return (\n      <button onClick={connectWalletHandler} className='cta-button connect-wallet-button'>\n        Connect Wallet\n      </button>\n    )\n  }\n\n  const mintNftButton = () => {\n    return (\n      <button onClick={mintNftHandler} className='cta-button mint-nft-button'>\n        Mint NFT\n      </button>\n    )\n  }\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, [])\n\n  return (\n    <div className='main-app'>\n      <h1>Scrappy Squirrels Tutorial</h1>\n      <div>\n        {connectWalletButton()}\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}